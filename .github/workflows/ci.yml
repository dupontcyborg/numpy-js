name: CI

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # Full test suite on main branch with Node.js matrix
  test:
    name: Test Suite (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install numpy
          npm ci

      - name: Verify environment
        run: |
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
          python -c "import numpy as np; print(f'NumPy {np.__version__} installed')"

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run format check
        run: npm run format:check

      - name: Run quick tests
        run: npm run test:quick

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build bundles
        run: npm run build

      - name: Test bundles
        run: npm run test:bundles

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results (Node ${{ matrix.node }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All tests passed on main branch" >> $GITHUB_STEP_SUMMARY

  # Generate and upload test coverage
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install numpy
          npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      # - name: Upload coverage reports
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: ./coverage/coverage-final.json
      #     flags: unittests
      #     fail_ci_if_error: false
      #     token: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            node -e "
            const coverage = require('./coverage/coverage-summary.json');
            const total = coverage.total;
            console.log('| Metric | Coverage |');
            console.log('|--------|----------|');
            console.log(\`| Lines | \${total.lines.pct}% |\`);
            console.log(\`| Statements | \${total.statements.pct}% |\`);
            console.log(\`| Functions | \${total.functions.pct}% |\`);
            console.log(\`| Branches | \${total.branches.pct}% |\`);
            " >> $GITHUB_STEP_SUMMARY
          fi

  # Build and validate distribution
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all bundles
        run: npm run build

      - name: Check bundle sizes
        run: |
          echo "## Bundle Sizes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle | Size | Gzipped |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|------|---------|" >> $GITHUB_STEP_SUMMARY
          for file in dist/*.js dist/*.cjs; do
            if [ -f "$file" ]; then
              size=$(ls -lh "$file" | awk '{print $5}')
              gzip -c "$file" > "$file.gz"
              gzsize=$(ls -lh "$file.gz" | awk '{print $5}')
              rm "$file.gz"
              echo "| $(basename $file) | $size | $gzsize |" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30
